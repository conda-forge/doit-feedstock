{% set version = "0.36.0" %}

{% set PYTHON = PYTHON | default("$PYTHON") %}

package:
  name: doit
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/d/doit/doit-{{ version }}.tar.gz
  sha256: 71d07ccc9514cb22fe59d98999577665eaab57e16f644d04336ae0b4bae234bc

build:
  number: 1
  noarch: python
  script:
    - {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation --disable-pip-version-check
  entry_points:
    - doit = doit.__main__:main

requirements:
  host:
    - pip
    - python {{ python_min }}
    - setuptools
  run:
    - cloudpickle
    - importlib-metadata >=4.4
    - python >={{ python_min }}

test:
  requires:
    - pip
    - python {{ python_min }}
  commands:
    - pip check
    - doit --version
    - doit --help

outputs:
  - name: doit

  - name: doit-with-toml
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("doit", max_pin="x.x.x") }}
        # technically python_version<"3.11"
        - tomli
    test:
      requires:
        - pip
        - python {{ python_min }}
      commands:
        - pip check

    about:
      summary: doit - Automation Tool (with toml config)

  - name: doit-with-all
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("doit-with-toml", max_pin="x.x.x") }}
    test:
      files:
        - run_doit_suite.py
      source_files:
        - tests
      requires:
        - coverage
        - pip
        - pytest >=4.0
        - python {{ python_min }}
      imports:
        - doit
      commands:
        - pip check
        - python run_doit_suite.py

    about:
      summary: doit - Automation Tool (with all extras)

about:
  home: https://pydoit.org
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: doit - Automation Tool
  description: |
    `doit` is a task management & automation tool.

    `doit` comes from the idea of bringing the power of build-tools to execute
    any kind of **task**

    `doit` is a modern open-source build-tool written in python designed to be
    simple to use and flexible to deal with complex work-flows.

    It is specially suitable for building and managing custom work-flows where
    there is no out-of-the-box solution available.

    `doit` has been successfully used on: systems test/integration automation,
    scientific computational pipelines, content generation, configuration
    management, etc."
  doc_url: https://pydoit.org/contents.html
  dev_url: https://github.com/pydoit/doit
  doc_source_url: https://github.com/pydoit/doit/tree/{{ version }}/doc

extra:
  feedstock-name: doit
  recipe-maintainers:
    - pbronez
    - bollwyvl
