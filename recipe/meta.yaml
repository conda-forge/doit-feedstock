{% set version = "0.34.0" %}
{% set build_number = 0 %}

# we don't ship all of the fixtures
{% set skips = ["test_execute", "test_sqlite_import"] %}

# py38 seems to pass
{% set skips = skips + ["test_not_picklable_raises_InvalidTask"] %}  # [py>=38]

# hangs on osx CI
{% set skips = skips + ["testLoop", "(TestCmdDumpDB and testDefault)", "test_run_wait"] %}  # [osx]
{% set skips = skips + ["test_invalid_args"] %}  # [osx and py>=38]

# fails on win CI with perms errors, etc.
{% set skips = skips + ["test_dump", "test_remove_from_non_empty_file", "test_unicode_string"] %}  # [win]

{% set cov_fail_under = 99 %}

package:
  name: doit-split
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/d/doit/doit-{{ version }}.tar.gz
  sha256: 8ef1de105cbca939c73e836dff86c812c9228e11ed8702f6955b7a086caac02d

build:
  number: {{ build_number }}

requirements:
  host:
    - python
  run:
    - python

test:
  commands:
    - echo "TBD"

outputs:
  - name: doit
    build:
      number: {{ build_number }}
      entry_points:
        - doit = doit.__main__:main
      script: '{{ PYTHON }} -m pip install . --no-deps -vv'
    requirements:
      host:
        - pip
        - python
      run:
        - cloudpickle
        - python
        - macfsevents  # [osx]
        - pyinotify  # [linux]
    test:
      requires:
        - pip
      commands:
        - pip check
        - doit --version
        - doit --help

  - name: doit-with-toml
    build:
      number: {{ build_number }}
      noarch: python
    requirements:
      host:
        - python >=3.6
      run:
        - {{ pin_subpackage("doit") }}
        - python >=3.6
        - toml >=0.10.1
    test:
      requires:
        - pip
      commands:
        - pip check

    about:
      summary: doit - Automation Tool (with toml config)

  - name: doit-with-plugins
    build:
      noarch: python
    requirements:
      host:
        - python >=3.6
      run:
        - {{ pin_subpackage("doit") }}
        - python >=3.6
        - setuptools
    test:
      requires:
        - pip
      commands:
        - pip check

    about:
      summary: doit - Automation Tool (with plugins)

  - name: doit-with-all
    build:
      number: {{ build_number }}
      noarch: python
    requirements:
      host:
        - python >=3.6
      run:
        - python >=3.6
        - {{ pin_subpackage("doit-with-toml") }}
        - {{ pin_subpackage("doit-with-plugins") }}

    test:
      source_files:
        - tests
      requires:
        - pip
        - pytest >=4.0
        - pytest-cov
      imports:
        - doit
      commands:
        - pip check
        - pytest --cov doit -vv -k "not ({{ skips | join(' or ') }})" --no-cov-on-fail --cov-fail-under={{ cov_fail_under }}

    about:
      summary: doit - Automation Tool (with all extras)

about:
  home: https://pydoit.org
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: doit - Automation Tool
  description: |
    `doit` is a task management & automation tool.

    `doit` comes from the idea of bringing the power of build-tools to execute
    any kind of **task**

    `doit` is a modern open-source build-tool written in python designed to be
    simple to use and flexible to deal with complex work-flows.

    It is specially suitable for building and managing custom work-flows where
    there is no out-of-the-box solution available.

    `doit` has been successfully used on: systems test/integration automation,
    scientific computational pipelines, content generation, configuration
    management, etc."
  doc_url: https://pydoit.org/contents.html
  dev_url: https://github.com/pydoit/doit
  doc_source_url: https://github.com/pydoit/doit/tree/{{ version }}/doc

extra:
  recipe-maintainers:
    - pbronez
    - bollwyvl
